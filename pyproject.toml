[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling",
]

[project]
name = "py-frontmatter"
description = "Manipulate YAML front matter."
readme = "README.md"
keywords = [
]
license = { text = "Apache-2.0" }
authors = [
  { name = "YEUNG King On", email = "koyeung@gmail.com" },
]
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dynamic = [
  "version",
]
dependencies = [
  "jsonpath-ng>=1.5.3",
  "ruamel-yaml>=0.17.21",
]

urls.Documentation = "https://github.com/koyeung/py-frontmatter#readme"
urls.Issues = "https://github.com/koyeung/py-frontmatter/issues"
urls.Source = "https://github.com/koyeung/py-frontmatter"
scripts.frontmatter = "py_frontmatter.console.application:main"

[tool.hatch.version]
path = "src/py_frontmatter/__about__.py"

[tool.hatch.env]
requires = [
  "hatch-pip-compile",
]

[tool.hatch.envs.default]
type = "pip-compile"
pip-compile-constraint = "default"
pip-compile-hashes = true
pip-compile-resolver = "uv"
pip-compile-installer = "uv"

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff_defaults.toml"

type = "pip-compile"
# pip-compile-constraint = "default"
pip-compile-hashes = true
pip-compile-resolver = "uv"
pip-compile-installer = "uv"

[tool.hatch.envs.hatch-test]
type = "pip-compile"
pip-compile-constraint = "default"
pip-compile-hashes = true
pip-compile-resolver = "uv"
pip-compile-installer = "uv"

[[tool.hatch.envs.hatch-test.matrix]]
python = [
  "3.10",
  "3.11",
  "3.12",
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]

[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/py_frontmatter tests}"

[tool.ruff]
# whenever hatch is upgraded,
# pls run: hatch fmt --check --sync
extend = "ruff_defaults.toml"

# revert line-length to match black
line-length = 88

lint.flake8-tidy-imports.ban-relative-imports = "parents"

lint.preview = false

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.coverage.paths]
py_frontmatter = [
  "src/py_frontmatter",
  "*/py-frontmatter/src/py_frontmatter",
]
tests = [
  "tests",
  "*/py-frontmatter/tests",
]

[tool.coverage.run]
source_pkgs = [
  "py_frontmatter",
  "tests",
]
branch = true
parallel = true
omit = [
  "src/py_frontmatter/__about__.py",
]

[tool.mypy]
ignore_missing_imports = true
